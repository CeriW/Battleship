$bold-border: 3px solid white;

// Ship configurations
$ships: (
  carrier: (
    length: 5,
  ),
  battleship: (
    length: 4,
  ),
  cruiser: (
    length: 3,
  ),
  submarine: (
    length: 3,
  ),
  destroyer: (
    length: 2,
  ),
);

.board {
  display: grid;
  grid-template-columns: repeat(11, 1fr);
  grid-template-rows: auto repeat(10, 1fr);
  aspect-ratio: 1 / 1;
  font-size: 28px;
  min-height: 0;
  min-width: 0;
  contain: layout size;
  will-change: auto;
  transform: translateZ(0);

  @media (max-width: 1000px) {
    font-size: 18px;
  }

  // Mobile-specific optimizations
  @media (max-width: 768px) {
    font-size: 16px;
  }

  @media (max-width: 480px) {
    font-size: 14px;
  }

  // Optimize for shorter screens
  @media (max-height: 700px) {
    font-size: 20px;

    @media (max-width: 768px) {
      font-size: 14px;
    }

    @media (max-width: 480px) {
      font-size: 12px;
    }
  }

  @media (max-height: 500px) {
    font-size: 18px;

    @media (max-width: 768px) {
      font-size: 12px;
    }

    @media (max-width: 480px) {
      font-size: 10px;
    }
  }

  .column-marker,
  .row-marker {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .column-marker {
    margin-bottom: 20%;
  }

  .row {
    grid-column: 1 / 12;
    display: grid;
    grid-template-columns: repeat(11, 1fr);
  }

  .cell {
    border: 1px solid rgba(white, 0.4);
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    transition: all 0.2s ease;
    min-height: 0;
    min-width: 0;
    contain: layout size;
    will-change: auto;
    overflow: hidden;
  }

  .cell.unguessed {
    cursor: pointer;

    // Touch feedback
    &:active {
      transform: scale(0.95);
      background-color: rgba(255, 255, 255, 0.1);
    }

    // Hover effect for desktop - only when it's the user's turn
    @media (hover: hover) {
      &:hover {
        background-color: rgba(255, 255, 255, 0.05);
        border-color: rgba(255, 255, 255, 0.6);
      }
    }

    // Disable hover and cursor when it's not the user's turn
    &.disabled {
      cursor: not-allowed;

      @media (hover: hover) {
        &:hover {
          background-color: transparent;
          border-color: rgba(white, 0.4);
        }
      }
    }
  }

  .cell.duplicate-guess {
    animation: duplicatePulse 0.6s ease-in-out;
    background-color: rgba(255, 0, 0, 0.3) !important;
    border-color: #ff4444 !important;
    box-shadow: 0 0 15px rgba(255, 68, 68, 0.6);
  }

  @keyframes duplicatePulse {
    0% {
      transform: scale(1);
      box-shadow: 0 0 5px rgba(255, 68, 68, 0.3);
    }
    50% {
      transform: scale(1.05);
      box-shadow: 0 0 20px rgba(255, 68, 68, 0.8);
    }
    100% {
      transform: scale(1);
      box-shadow: 0 0 15px rgba(255, 68, 68, 0.6);
    }
  }

  .row-marker + .cell {
    border-left: $bold-border;
  }

  .cell:last-child {
    border-right: $bold-border;
  }

  .column-marker + .row .cell {
    border-top: $bold-border;
  }

  .row:last-child .cell {
    border-bottom: $bold-border;
  }

  // Generate ship styles using loops
  @each $ship-name, $ship-config in $ships {
    $length: map-get($ship-config, length);

    .#{$ship-name} {
      position: relative;
      z-index: 1;

      &::before {
        content: '';
        position: absolute;
        inset: 0;
        background: url('/img/#{$ship-name}.png') no-repeat center top;
        background-size: cover;
        z-index: -1;
        opacity: 0.6;
      }

      // Generate numbered instances (1 through ship length)
      @for $i from 1 through $length {
        &-#{$i}::before {
          @if $i == $length {
            background-position: center 100%;
          } @else {
            background-position: center (100% / $length - 1) * ($i - 1);
          }
        }
      }
    }
  }

  .ship + .ship::before,
  .ship:has(+ .ship):before {
    transform: rotate(-90deg);
  }

  .user-guess-board & .ship:not(.sunk)::before {
    display: none;
  }
}
